---
title: Intro to Extensive Form Games
author: "[with]{.with} Connor T. Wiegand"
from: markdown+emoji
stripcomments: true
format: 
   revealjs:
      slide-level: 3
      chalkboard: 
         read-only: true
         src: chalkboard.json
      # embed-resources: true
# editor:
#    render-on-save: true
---

### Games in Sequence

- So far, we've modeled games as occurring simultaneously
   - The representation of choice for these games is called "Normal Form" or "Srtategic Form"
   - The primary tool is a payoff matrix 
      - Other than some geometric bookkeeping, this tool is pretty straightforward to use
      - Provides direct access to our so-called "good predictions"


- However, we may think of games as occurring _in-sequence_ where one player makes a move and the other(s) respond
   - The payoff matrix will not be as helpful here
   - Instead, we will use trees :evergreen_tree:
   - This representation (e.g., [model]{.hi}) is known as "Extensive Form"

### Components of a game tree

- This is called the [Entrant Game]{.hi}

- The [_node_]{.hi} at the top represents the player who goes first in the game
   - This is called the _root node_
- _Edges_[.hi] connect the nodes, and represent strategies
- Payoffs are shown at the bottom in the order of ($\pi_1, \pi_2$)
   - These are called _terminal nodes_
- Each non-terminal node is a player

![](imgs/entrant-game.png){.absolute width=50% right=10 bottom=-100}

### Using Extensive Form Games

- Each "level" (often a horizontal row) of the game represents a [_stage_]{.hi} of the game
   - In other economics classes, you might call this a _period_

- We can trace out a path on the game tree to represent an _outcome_ of a game


![](imgs/entrant-game.png){.absolute width=50% right=10 bottom=-100}

### A Refinement

- Previously, we used the term "strategy" interchangeably with "move" and "action"

- However, you might recall that this was the following definition:

   - > [**Def:**]{.def} A strategy is an [information contingent]{.ul} plan of action

- Now, this has real meaning: at different stages of the game, players have different information
   - Note that they still have common knowledge of the rules of the game + rationality

- What does _information-contingent_ mean?

### Strategies in Extensive Form Games

- Since a strategy is information-contingent, it must include an action for each possible state of the world that could be realized
   - You have outfits in mind that vary based on the weather

- 

<!-- Fig -->


### Another Ex.

- We often don't just want to specify an _outcome_

- We want to analyze a game so we can
   - Make a (hopefully good) prediction
   - Model the behavior of agents in a game 

- To analyze a game, we want to describe the _strategies_ that individuals are playing

- Therefore, we often trace out paths of _strategies_ rather than _outcomes_

- 


### How many strategies does each player have?


<!-- Bigger  Game -->

### Conversion from Extensive Form

- Consider the following game

   1. Write down each player

   1. Write down the strategy space for each player

   1. Write down the payoffs

- 

- 

- 

- What if that's all the information you got?

### You could make a table!

- We can convert extensive form games (_EFG_?) into normal form games (_NFG_) 

- How big is the payoff matrix you have from the previous slide
   - 2x4

### Equilibria

- To find NE on a game tree, it turns out to be easiest to just convert the game into normal form and underline


<!-- Ex -->

- Specifying payoffs like this in normal form might seem ~~dumb~~ silly, but it allows us to capture the more subtle notion of deviation from a strategy than normal form play does

### Gooder Predictions

- So, why use the tree?

- Consider the following example


<!-- Entrant game again -->

- Convert the game to normal form (and find the NE)

- Are both of these predictions equally as good?

### Gooder Games

- Game trees can help us find more refined versions of NE, which is indeed what we will be after

- However, there are a few more aspects of game trees to introduce

- It turns out that we can capture some pretty interesting games with this model

### Information

- We can easily visualize varying levels of _information_ in a game using game trees

<!-- Vanilla Ex -->

- In this example, players know what players before them did

- Each node is contained in whats called a [_Singleton_ information set]{.hi} 

### Information Sets

- In this game, the dashed line (often a bubble, both are equally common) represents where player 2 knows where they _could_ be in a game

- This dashed line / bubble makes clear the notion of [_information sets_]{.hi}
   - Player 2 knows when they are in the bubble
   - They just don't know which spot they are at within the bubble

- Now what do strategies look like?

<!--  -->

### Strategies and information

- Since player 2 now has less information, they will have a different kind of strategy

- In general, the strategy for a player in a game will have [one action for each information set]{.uli} the player has in a game

- 

<!-- More complex example -->


### How many strategies?


<!--  -->


### Difference in games

<!-- More big games -->



### Conversion to normal form


### Calculating Strategy-Space size


### Orientation of EFGs


### Conversion of EFGs, cont.


### Relationship of EFGs to NFGs




## Next time

### Back to the Entrant Game

- We had two predictions

- Which one is better?
   - Why?
   - One is immune to "cheap talk"

- How do we formalize this?


### Subgames


